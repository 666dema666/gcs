<?xml version="1.0"?>
<project name="gcs" default="build_jar" xmlns:if="ant:if" xmlns:unless="ant:unless">
	<condition property="platform.mac" else="false">
		<os family="mac"/>
	</condition>
	<condition property="platform.windows" else="false">
		<os family="windows"/>
	</condition>
	<condition property="platform.linux" else="false">
		<and>
			<os family="unix"/>
			<not>
				<os family="mac"/>
			</not>
		</and>
	</condition>
	<property if:true="${platform.mac}" name="platform" value="mac"/>
	<property if:true="${platform.windows}" name="platform" value="windows"/>
	<property if:true="${platform.linux}" name="platform" value="linux"/>

	<property name="app" value="gcs"/>
	<property if:true="${platform.windows}" name="app.exe" value="${app}.exe"/>
	<property unless:true="${platform.windows}" name="app.exe" value="${app}"/>
	<property if:true="${platform.mac}" name="app.signature" value="RWGS"/>
	<property name="src" value="src"/>
	<property name="lib" value="libraries"/>
	<property name="toolkit" value="toolkit-4.0.0.jar"/>
	<property name="toolkit_lib" value="../toolkit/libraries"/>
	<property name="toolkit_path" value="${toolkit_lib}/${toolkit}"/>
	<property name="apple_stubs" value="apple_stubs.jar"/>
	<property name="apple_stubs_path" value="../apple_stubs/${apple_stubs}"/>
	<property name="trove" value="trove-3.0.3.jar"/>
	<property name="trove_path" value="${toolkit_lib}/trove-3.0.3.jar"/>
	<property name="iText" value="iText-2.1.7.jar"/>
	<property name="iText_path" value="${lib}/${iText}"/>
	<property name="build_root" value="ant_build"/>
	<property name="gcs_build" value="${build_root}/${app}"/>
	<property name="dist.build" value="${build_root}/dist"/>
	<property name="annotations_src" value="${build_root}/annotations"/>
	<property name="min_jdk" value="1.8"/>
	<property name="app_name" value="GURPS Character Sheet"/>
	<property name="copyright_owner" value="Richard A. Wilkes"/>
	<property name="primary_version" value="4.0.0"/>
	<property name="dist_name" value="GCS-${primary_version}"/>
	<property name="dist_root" value="${dist.build}/${dist_name}"/>
	<property name="build_app_bundle" value="${dist_root}/${app_name}.app/Contents"/>
	<property name="bundle_res" value="${build_app_bundle}/Resources"/>
	<property name="java_bundle_dir" value="${build_app_bundle}/Java"/>
	<property name="splash_path" value="com/trollworks/gcs/app/images/Splash.gif"/>
	<property name="launcher_stub_src" value="com/trollworks/gcs/app/GCS.java"/>
	<property name="icons" value="graphics/icons"/>

	<tstamp>
		<format property="version" pattern="${primary_version}.yyyyMMddHHmmss"/>
	</tstamp>
	<tstamp>
		<format property="year" pattern="yyyy"/>
	</tstamp>

	<target name="clean" description="Clean up after a GCS jar build">
		<delete dir="${build_root}"/>
		<delete>
			<fileset dir="${lib}" includes="${app}-*.jar"/>
		</delete>
	</target>

	<target name="build_jar" description="Build the GCS jar" depends="clean">
		<mkdir dir="${gcs_build}"/>
		<mkdir dir="${annotations_src}"/>

		<!-- Compile the code. -->
		<javac srcdir="${src}" destdir="${gcs_build}" debug="no" optimize="yes"
			target="${min_jdk}" source="${min_jdk}" deprecation="true"
			excludes="${launcher_stub_src}" includeantruntime="no">
			<classpath>
				<pathelement location="${toolkit_path}"/>
				<pathelement location="${trove_path}"/>
				<pathelement location="${iText_path}"/>
				<pathelement location="${apple_stubs_path}"/>
			</classpath>
			<compilerarg value="-Xlint:all"/>
			<compilerarg value="-Xlint:-serial"/>
			<compilerarg value="-processorpath"/>
			<compilerarg value="${toolkit_lib}/toolkit_annotation_processors.jar"/>
			<compilerarg value="-s"/>
			<compilerarg value="${annotations_src}"/>
			<compilerarg value="-implicit:class"/>
		</javac>

		<!-- Compile the launcher code to be compatible with Java 1.1. -->
		<javac srcdir="${src}" destdir="${gcs_build}"
			includes="${launcher_stub_src}" debug="no" optimize="yes"
			target="1.1" source="1.1" deprecation="true" includeantruntime="no">
			<classpath>
				<pathelement location="${toolkit_path}"/>
			</classpath>
			<compilerarg value="-Xlint:all"/>
			<compilerarg value="-Xlint:-options"/>
		</javac>

		<!-- Copy the resources over. -->
		<copy todir="${gcs_build}">
			<fileset dir="${src}" includes="**/*.txt,**/*.png,**/*.gif"/>
		</copy>

		<!-- Create the jar file. -->
		<jar destfile="${lib}/${app}-${primary_version}.jar" basedir="${gcs_build}" duplicate="fail">
			<manifest>
				<attribute name="Class-Path" value="${toolkit} ${trove} ${iText} ${apple_stubs}"/>
				<attribute name="Main-Class" value="com.trollworks.gcs.app.GCS"/>
				<attribute name="SplashScreen-Image" value="${splash_path}"/>
				<attribute name="bundle-name" value="${app_name}"/>
				<attribute name="bundle-version" value="${version}"/>
				<attribute name="bundle-license" value="Mozilla Public License 2.0"/>
				<attribute name="bundle-copyright-owner" value="${copyright_owner}"/>
				<attribute name="bundle-copyright-years" value="1998-${year}"/>
			</manifest>
		</jar>
	</target>

	<target name="build_icons" description="Packs the various iconsets into icns files">
		<delete dir="${icons}/app.icns"/>
		<exec executable="/usr/bin/iconutil" dir="${icons}">
			<arg value="--convert"/>
			<arg value="icns"/>
			<arg value="app.iconset"/>
		</exec>

		<delete dir="${icons}/gcs.icns"/>
		<exec executable="/usr/bin/iconutil" dir="${icons}">
			<arg value="--convert"/>
			<arg value="icns"/>
			<arg value="gcs.iconset"/>
		</exec>

		<delete dir="${icons}/gcs.icns"/>
		<exec executable="/usr/bin/iconutil" dir="${icons}">
			<arg value="--convert"/>
			<arg value="icns"/>
			<arg value="gct.iconset"/>
		</exec>

		<delete dir="${icons}/glb.icns"/>
		<exec executable="/usr/bin/iconutil" dir="${icons}">
			<arg value="--convert"/>
			<arg value="icns"/>
			<arg value="glb.iconset"/>
		</exec>
	</target>

	<target name="clean_bundle" description="Cleans up after a bundle build">
		<delete dir="${build_root}"/>
		<delete>
			<fileset dir="." includes="gcs-*-${platform}.zip"/>
		</delete>
	</target>
	
	<target name="bundle" description="Create a distribution bundle" depends="clean_bundle">
		<property name="dist.name" value="${app}-${primary_version}-${platform}"/>
		<property name="dist.root" value="${dist.build}/${dist.name}"/>
		<property if:true="${platform.mac}" name="mac.bundle" value="${dist.root}/${app_name}.app/Contents"/>
		<property if:true="${platform.mac}" name="app.dir" value="${mac.bundle}/MacOS"/>
		<property unless:true="${platform.mac}" name="app.dir" value="${dist.root}"/>
		<property name="support" value="${app.dir}/support"/>
		<property if:true="${platform.mac}" name="app.icons" value="${mac.bundle}/Resources"/>
		<property unless:true="${platform.mac}" name="app.icons" value="${support}"/>
		<property name="app.jre" value="${support}/jre"/>
		<property name="app.jars" value="${support}/jars"/>
		<property name="samples" value="${dist.root}/samples"/>
		<property name="data" value="${dist.root}/data"/>

		<!-- Copy the launcher. -->
		<mkdir dir="${app.dir}"/>
		<copy file="launcher/${platform}/${app.exe}" todir="${app.dir}"/>
		<chmod file="${app.dir}/${app.exe}" perm="+x"/>

		<!-- Copy the icons. -->
		<mkdir dir="${app.icons}"/>
		<copy if:true="${platform.mac}" file="${icons}/app.icns" todir="${app.icons}"/>
		<copy if:true="${platform.mac}" file="${icons}/gcs.icns" todir="${app.icons}"/>
		<copy if:true="${platform.mac}" file="${icons}/gct.icns" todir="${app.icons}"/>
		<copy if:true="${platform.mac}" file="${icons}/glb.icns" todir="${app.icons}"/>
		<copy if:true="${platform.linux}" file="${icons}/app.iconset/icon_128x128.png" tofile="${app.icons}/${app}.png"/>

		<!-- Extract the JRE. -->
		<ant dir="../toolkit" target="jre" inheritall="no">
			<property name="platform.mac" value="${platform.mac}"/>
			<property name="platform.windows" value="${platform.windows}"/>
			<property name="platform.linux" value="${platform.linux}"/>
			<property name="support" location="${support}"/>
		</ant>

		<!-- Copy the jars. -->
		<mkdir dir="${app.jars}"/>
		<copy file="${lib}/${app}-${primary_version}.jar" todir="${app.jars}"/>
		<copy file="${toolkit_path}" todir="${app.jars}"/>
		<copy file="${trove_path}" todir="${app.jars}"/>
		<copy file="${iText_path}" todir="${app.jars}"/>
		<copy file="${apple_stubs_path}" todir="${app.jars}"/>

		<!-- Copy the Mac bundle information. -->
		<copy if:true="${platform.mac}" file="launcher/${platform}/Info.plist" todir="${mac.bundle}">
			<filterset>
				<filter token="APP_EXE" value="${app.exe}"/>
				<filter token="APP_NAME" value="${app_name}"/>
				<filter token="APP_VERSION" value="${primary_version}"/>
				<filter token="APP_SIGNATURE" value="${app.signature}"/>
				<filter token="COPYRIGHT_YEAR" value="${year}"/>
				<filter token="COPYRIGHT_OWNER" value="${copyright_owner}"/>
			</filterset>
		</copy>
		<echo if:true="${platform.mac}" message="APPL${app.signature}" file="${mac.bundle}/PkgInfo"/>

		<!-- Copy the license. -->
		<copy file="license.html" todir="${dist.root}"/>

		<!-- Copy the samples. -->
		<mkdir dir="${samples}"/>
		<copy todir="${samples}">
			<fileset dir="samples"/>
		</copy>

		<!-- Copy the database. -->
		<mkdir dir="${data}"/>
		<copy todir="${data}">
			<fileset dir="data"/>
		</copy>

		<!-- Create the zip file. Using native implementation to preserve execution bits on unix-like OS's. -->
		<exec unless:true="${platform.windows}" executable="/usr/bin/zip" dir="${dist.build}">
			<arg value="-r"/>
			<arg value="-y"/>
			<arg value="-9"/>
			<arg file="${dist.name}.zip"/>
			<arg value="${dist.name}"/>
		</exec>
		<zip if:true="${platform.windows}" destfile="${dist.name}.zip" basedir="${dist.build}" level="9"
			includes="${dist.name}/**"/>
	</target>

	<target name="build_launcher_exe" description="Build the native launcher">
		<ant dir="../toolkit" target="launcher" inheritall="false">
			<property name="platform.mac" value="${platform.mac}"/>
			<property name="platform.windows" value="${platform.windows}"/>
			<property name="platform.linux" value="${platform.linux}"/>
			<property name="app.dir" location="launcher/${platform}"/>
			<property name="app.name" value="${app_name}"/>
			<property name="app.exe" value="${app.exe}"/>
			<property if:true="${platform.linux}" name="app.categories" value="Game;Roleplaying;Utility"/>
			<property if:true="${platform.linux}" name="app.keywords" value="Roleplaying"/>
		</ant>
	</target>
	
	<target name="bundle_all" description="Create distribution bundles for all platforms">
		<antcall target="bundle" inheritall="no">
			<param name="platform.mac" value="true"/>
			<param name="platform.windows" value="false"/>
			<param name="platform.linux" value="false"/>
		</antcall>
		<antcall target="bundle" inheritall="no">
			<param name="platform.mac" value="false"/>
			<param name="platform.windows" value="false"/>
			<param name="platform.linux" value="true"/>
		</antcall>
		<antcall target="bundle" inheritall="no">
			<param name="platform.mac" value="false"/>
			<param name="platform.windows" value="true"/>
			<param name="platform.linux" value="false"/>
		</antcall>
	</target>
</project>
